diff --git a/cmake/onnxruntime.cmake b/cmake/onnxruntime.cmake
index 591da4161..4411d0fa0 100644
--- a/cmake/onnxruntime.cmake
+++ b/cmake/onnxruntime.cmake
@@ -25,14 +25,14 @@ add_custom_command(OUTPUT ${SYMBOL_FILE} ${CMAKE_CURRENT_BINARY_DIR}/generated_s
   WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
 
 add_custom_target(onnxruntime_generate_def ALL DEPENDS ${SYMBOL_FILE} ${CMAKE_CURRENT_BINARY_DIR}/generated_source.c)
-add_library(onnxruntime SHARED ${CMAKE_CURRENT_BINARY_DIR}/generated_source.c)
-set_target_properties(onnxruntime PROPERTIES VERSION ${ORT_VERSION})
-add_dependencies(onnxruntime onnxruntime_generate_def ${onnxruntime_EXTERNAL_DEPENDENCIES})
-target_include_directories(onnxruntime PRIVATE ${ONNXRUNTIME_ROOT})
-onnxruntime_add_include_to_target(onnxruntime)
+add_library(onnxruntime_testo SHARED ${CMAKE_CURRENT_BINARY_DIR}/generated_source.c)
+set_target_properties(onnxruntime_testo PROPERTIES VERSION ${ORT_VERSION})
+add_dependencies(onnxruntime_testo onnxruntime_generate_def ${onnxruntime_EXTERNAL_DEPENDENCIES})
+target_include_directories(onnxruntime_testo PRIVATE ${ONNXRUNTIME_ROOT})
+onnxruntime_add_include_to_target(onnxruntime_testo)
 
 if (onnxruntime_USE_CUDA)
-  target_include_directories(onnxruntime PRIVATE ${onnxruntime_CUDNN_HOME}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
+  target_include_directories(onnxruntime_testo PRIVATE ${onnxruntime_CUDNN_HOME}/include ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
 endif()
 
 if(UNIX)
@@ -47,14 +47,14 @@ endif()
 
 if (NOT WIN32)
   if (APPLE)
-    set_target_properties(onnxruntime PROPERTIES INSTALL_RPATH "@loader_path")
+    set_target_properties(onnxruntime_testo PROPERTIES INSTALL_RPATH "@loader_path")
   else()
     set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,-rpath='$ORIGIN'")
   endif()
 endif()
 
 #The BEGIN_WHOLE_ARCHIVE/END_WHOLE_ARCHIVE part should contain the implementations of all the C API functions
-target_link_libraries(onnxruntime PRIVATE
+target_link_libraries(onnxruntime_testo PRIVATE
     onnxruntime_session
     ${onnxruntime_libs}
     ${PROVIDERS_CUDA}
@@ -77,18 +77,18 @@ target_link_libraries(onnxruntime PRIVATE
     ${onnxruntime_EXTERNAL_LIBRARIES})
 
 if (onnxruntime_ENABLE_LANGUAGE_INTEROP_OPS)
-  target_link_libraries(onnxruntime PRIVATE onnxruntime_language_interop onnxruntime_pyop)
+  target_link_libraries(onnxruntime_testo PRIVATE onnxruntime_language_interop onnxruntime_pyop)
 endif()
 
-set_property(TARGET onnxruntime APPEND_STRING PROPERTY LINK_FLAGS ${ONNXRUNTIME_SO_LINK_FLAG})
-set_target_properties(onnxruntime PROPERTIES LINK_DEPENDS ${SYMBOL_FILE})
+set_property(TARGET onnxruntime_testo APPEND_STRING PROPERTY LINK_FLAGS ${ONNXRUNTIME_SO_LINK_FLAG})
+set_target_properties(onnxruntime_testo PROPERTIES LINK_DEPENDS ${SYMBOL_FILE})
 if(onnxruntime_ENABLE_LTO)
-  set_target_properties(onnxruntime PROPERTIES INTERPROCEDURAL_OPTIMIZATION_RELEASE TRUE)
-  set_target_properties(onnxruntime PROPERTIES INTERPROCEDURAL_OPTIMIZATION_RELWITHDEBINFO TRUE)
+  set_target_properties(onnxruntime_testo PROPERTIES INTERPROCEDURAL_OPTIMIZATION_RELEASE TRUE)
+  set_target_properties(onnxruntime_testo PROPERTIES INTERPROCEDURAL_OPTIMIZATION_RELWITHDEBINFO TRUE)
 endif()
-install(TARGETS onnxruntime
+install(TARGETS onnxruntime_testo
         ARCHIVE  DESTINATION ${CMAKE_INSTALL_LIBDIR}
         LIBRARY  DESTINATION ${CMAKE_INSTALL_LIBDIR}
         RUNTIME  DESTINATION ${CMAKE_INSTALL_BINDIR})
 
-set_target_properties(onnxruntime PROPERTIES FOLDER "ONNXRuntime")
+set_target_properties(onnxruntime_testo PROPERTIES FOLDER "ONNXRuntime")
diff --git a/cmake/onnxruntime_unittests.cmake b/cmake/onnxruntime_unittests.cmake
index 115776cff..fb071db6b 100644
--- a/cmake/onnxruntime_unittests.cmake
+++ b/cmake/onnxruntime_unittests.cmake
@@ -33,7 +33,7 @@ function(AddTest)
     add_dependencies(${_UT_TARGET} ${_UT_DEPENDS})
   endif(_UT_DEPENDS)
   if(_UT_DYN)
-    target_link_libraries(${_UT_TARGET} PRIVATE ${_UT_LIBS} gtest gmock onnxruntime ${CMAKE_DL_LIBS} Threads::Threads)
+    target_link_libraries(${_UT_TARGET} PRIVATE ${_UT_LIBS} gtest gmock onnxruntime_testo ${CMAKE_DL_LIBS} Threads::Threads)
   else()
     target_link_libraries(${_UT_TARGET} PRIVATE ${_UT_LIBS} gtest gmock ${onnxruntime_EXTERNAL_LIBRARIES})
   endif()
@@ -615,7 +615,7 @@ endif()
 
 if (onnxruntime_BUILD_SHARED_LIB)
   set(onnxruntime_perf_test_libs onnxruntime_test_utils onnx_test_runner_common onnxruntime_common re2
-          onnx_test_data_proto onnx_proto libprotobuf ${GETOPT_LIB_WIDE} onnxruntime ${onnxruntime_EXTERNAL_LIBRARIES}
+          onnx_test_data_proto onnx_proto libprotobuf ${GETOPT_LIB_WIDE} onnxruntime_testo ${onnxruntime_EXTERNAL_LIBRARIES}
           ${SYS_PATH_LIB} ${CMAKE_DL_LIBS})
   if(onnxruntime_USE_NSYNC)
     list(APPEND onnxruntime_perf_test_libs nsync_cpp)
diff --git a/tools/ci_build/gen_def.py b/tools/ci_build/gen_def.py
index 6ed654db6..023a3657d 100755
--- a/tools/ci_build/gen_def.py
+++ b/tools/ci_build/gen_def.py
@@ -35,7 +35,7 @@ symbols = sorted(symbols)
 symbol_index = 1
 with open(args.output, 'w') as file:
   if args.style == 'vc':    
-    file.write('LIBRARY "onnxruntime.dll"\n')
+    file.write('LIBRARY "onnxruntime_testo.dll"\n')
     file.write('EXPORTS\n')
   else:
     file.write('VERS_%s {\n' % VERSION_STRING)
