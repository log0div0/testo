diff --git a/include/onnxruntime/core/providers/cuda/cuda_provider_factory.h b/include/onnxruntime/core/providers/cuda/cuda_provider_factory.h
index 81b5477b3..26dc343d9 100644
--- a/include/onnxruntime/core/providers/cuda/cuda_provider_factory.h
+++ b/include/onnxruntime/core/providers/cuda/cuda_provider_factory.h
@@ -12,6 +12,13 @@ extern "C" {
  */
 ORT_API_STATUS(OrtSessionOptionsAppendExecutionProvider_CUDA, _In_ OrtSessionOptions* options, int device_id);
 
+struct CUDA_DeviceInfo {
+	char name[256];
+	char uuid_str[64];
+};
+
+ORT_API_STATUS(CUDA_GetDeviceInfo, _Out_ struct CUDA_DeviceInfo* info, int device_id);
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/onnxruntime/core/providers/cuda/cuda_provider_factory.cc b/onnxruntime/core/providers/cuda/cuda_provider_factory.cc
index f5026387f..90a632189 100644
--- a/onnxruntime/core/providers/cuda/cuda_provider_factory.cc
+++ b/onnxruntime/core/providers/cuda/cuda_provider_factory.cc
@@ -7,6 +7,7 @@
 #include "cuda_execution_provider.h"
 #include "core/session/abi_session_options_impl.h"
 #include "core/framework/bfc_arena.h"
+#include "cuda_common.h"
 
 using namespace onnxruntime;
 
@@ -49,3 +50,62 @@ ORT_API_STATUS_IMPL(OrtSessionOptionsAppendExecutionProvider_CUDA, _In_ OrtSessi
   options->provider_factories.push_back(onnxruntime::CreateExecutionProviderFactory_CUDA(static_cast<OrtDevice::DeviceId>(device_id)));
   return nullptr;
 }
+
+char hex_map[] = {
+  '0',
+  '1',
+  '2',
+  '3',
+  '4',
+  '5',
+  '6',
+  '7',
+  '8',
+  '9',
+  'a',
+  'b',
+  'c',
+  'd',
+  'e',
+  'f',
+};
+
+ORT_API_STATUS_IMPL(CUDA_GetDeviceInfo, _Out_ CUDA_DeviceInfo* info, int device_id) {
+  cudaDeviceProp props = {};
+  CUDA_CALL_THROW(cudaDeviceSynchronize());
+  CUDA_CALL_THROW(cudaGetDeviceProperties(&props, device_id));
+  strcpy(info->name, props.name);
+  size_t i = 0;
+  size_t j = 0;
+  uint8_t* uuid = (uint8_t*)&(props.uuid);
+  while (i < 4) {
+    info->uuid_str[j++] = hex_map[uuid[i] >> 4];
+    info->uuid_str[j++] = hex_map[uuid[i] & 0xf];
+    ++i;
+  }
+  info->uuid_str[j++] = '-';
+  while (i < 6) {
+    info->uuid_str[j++] = hex_map[uuid[i] >> 4];
+    info->uuid_str[j++] = hex_map[uuid[i] & 0xf];
+    ++i;
+  }
+  info->uuid_str[j++] = '-';
+  while (i < 8) {
+    info->uuid_str[j++] = hex_map[uuid[i] >> 4];
+    info->uuid_str[j++] = hex_map[uuid[i] & 0xf];
+    ++i;
+  }
+  info->uuid_str[j++] = '-';
+  while (i < 10) {
+    info->uuid_str[j++] = hex_map[uuid[i] >> 4];
+    info->uuid_str[j++] = hex_map[uuid[i] & 0xf];
+    ++i;
+  }
+  info->uuid_str[j++] = '-';
+  while (i < 16) {
+    info->uuid_str[j++] = hex_map[uuid[i] >> 4];
+    info->uuid_str[j++] = hex_map[uuid[i] & 0xf];
+    ++i;
+  }
+  return nullptr;
+}
diff --git a/onnxruntime/core/providers/cuda/symbols.txt b/onnxruntime/core/providers/cuda/symbols.txt
index 157b3c3ae..04958a4da 100644
--- a/onnxruntime/core/providers/cuda/symbols.txt
+++ b/onnxruntime/core/providers/cuda/symbols.txt
@@ -1 +1,2 @@
-OrtSessionOptionsAppendExecutionProvider_CUDA
\ No newline at end of file
+OrtSessionOptionsAppendExecutionProvider_CUDA
+CUDA_GetDeviceInfo
\ No newline at end of file
