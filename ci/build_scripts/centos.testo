
include "common.testo"

machine centos {
	cpus: 4
	iso: "${ISO_DIR}/CentOS-8-x86_64-1905-dvd1.iso"
	ram: 4Gb
	disk main: {
		size: 32Gb
	}
	nic nat: {
		attached_to: "nat"
	}

	video main: {
		adapter_type: "qxl"
	}
}

test centos_install_os {
	centos {
		start
		wait "Install CentOS Linux 8"; press Enter
		wait "Press [Esc]"; press Esc
		wait "What language would you" timeout 10m; mouse click "Continue"
		mouse click "Installation Dest"
		mouse click "Done"
		sleep 2s
		mouse click "Software selection"
		mouse click "Minimal Install"
		mouse click "Done".from_top(0)
		sleep 5s
		mouse click js "return find_text('Begin Installation').match_color(null, 'blue').from_top(0).center()"
		mouse click "Root Password".from_top(0);
		wait "Enter a password"; type "${password}"
		press Tab; type "${password}"
		mouse click "Done".from_top(0)
		mouse move 200 200
		mouse click "Done".from_top(0)
		wait "CentOS Linux is now successfully installed" timeout 20m
		sleep 5s
		shutdown
		unplug dvd
		start
		wait "localhost login"
	}
}

[no_snapshots: true]
test centos_install_guest_additions: centos_install_os {
	centos {
		wait "localhost login:"; type "root"; press Enter
		wait "Password:"; type "${password}"; press Enter
		wait "root@localhost"

		plug dvd "${ISO_DIR}/testo-guest-additions.iso"; sleep 5s
		type "setenforce 0"; press Enter
		type "mount /dev/cdrom /media"; press Enter
		wait "mounted read-only"; type "rpm -i /media/testo-guest-additions.rpm && echo result is $?"; press Enter
		wait "result is 0"
		type "umount /media"; press Enter
		sleep 5s; unplug dvd

		exec bash "echo hello world"
	}
}

test centos_install_packages: centos_install_guest_additions {
	centos {
		plug dvd "${ISO_DIR}/CentOS-8-x86_64-1905-dvd1.iso"
		sleep 5s
		exec bash """
			nmcli connection up `ls /proc/sys/net/ipv4/conf/ | grep "ens\\|eth"`
			mkdir /media/CentOS
			mount /dev/cdrom /media/CentOS
			yum --disablerepo=* --enablerepo=c8-media* -y install git gcc gcc-c++ make openssl-devel python3-devel libvirt-devel tar wget vim rpm-build libguestfs-devel
			cd /root
			wget https://github.com/Kitware/CMake/releases/download/v3.19.2/cmake-3.19.2-Linux-x86_64.sh -O cmake.sh
			chmod +x cmake.sh
			./cmake.sh --skip-license --prefix=/usr
			cmake --version
		""" timeout 30m
	}
}

test centos_install_cuda: centos_install_packages {
	centos {
		copyto "${cuda_linux_path}" "/root/cuda.run"
		copyto "${cudnn_linux_path}" "/root/cudnn.tgz"
		exec bash """
			cd /root
			chmod +x ./cuda.run
			./cuda.run --silent --toolkit --override
			/usr/local/cuda/bin/nvcc --version
			tar xf ./cudnn.tgz
			rm cuda.run
			rm cudnn.tgz
			ls /root
		""" timeout 10m
	}
}

[no_snapshots: true]
test centos_build_onnxruntime_gpu: centos_install_cuda {
	centos {
		linux_copy_onnxruntime_srcs()
		exec bash """
			export PATH="$PATH:/usr/local/bin:/usr/local/cuda/bin"
			mkdir -p /root/onnxruntime_build
			cd /root/onnxruntime_build
			cmake ../onnxruntime/cmake \
				-DCMAKE_BUILD_TYPE=Release \
				-DCMAKE_INSTALL_PREFIX=/root/onnxruntime_dist \
				-DCMAKE_INSTALL_LIBDIR=lib \
				-Donnxruntime_DISABLE_CONTRIB_OPS=ON \
				-Donnxruntime_BUILD_SHARED_LIB=ON \
				-Donnxruntime_BUILD_UNIT_TESTS=OFF \
				-Donnxruntime_USE_CUDA=ON \
				-Donnxruntime_CUDNN_HOME=/root/cuda
			make install -j$(nproc)
		""" timeout 2h
		copyfrom "/root/onnxruntime_dist" "${TMP_DIR}/onnxruntime_dist_centos_gpu"
	}
}

test centos_build_breakpad: centos_install_packages {
	centos {
		exec bash """
			cd /root/

			git clone https://chromium.googlesource.com/breakpad/breakpad
			cd breakpad
			git checkout b324760c7f53667af128a6b77b790323da04fcb9

			git clone https://chromium.googlesource.com/linux-syscall-support src/third_party/lss
			cd src/third_party/lss
			git checkout e1e7b0ad8ee99a875b272c8e33e308472e897660

			cd /root/breakpad
			./configure --prefix=
			DESTDIR=/root/breakpad_dist make install -j$(nproc)
		"""
	}
}

[no_snapshots: true]
test centos_build_testo: centos_build_breakpad {
	centos {
		copyto "${TESTO_SRC_DIR}/3rd_party" "/root/testo/3rd_party"
		copyto "${TESTO_SRC_DIR}/docs" "/root/testo/docs"
		copyto "${TESTO_SRC_DIR}/lib" "/root/testo/lib"
		copyto "${TESTO_SRC_DIR}/src/testo" "/root/testo/src/testo"
		copyto "${TESTO_SRC_DIR}/src/testo_guest_additions_protocol" "/root/testo/src/testo_guest_additions_protocol"
		copyto "${TESTO_SRC_DIR}/src/testo_nn_server_protocol" "/root/testo/src/testo_nn_server_protocol"
		copyto "${TESTO_SRC_DIR}/src/CMakeLists.txt" "/root/testo/src/CMakeLists.txt"
		copyto "${TESTO_SRC_DIR}/CMakeLists.txt" "/root/testo/CMakeLists.txt"
		exec bash """
			cd /root/
			mkdir testo_build
			cd testo_build
			cmake ../testo \
				-DCMAKE_BUILD_TYPE=Release \
				-DCPACK_GENERATOR=RPM \
				-DBREAKPAD_DIR=/root/breakpad_dist
			make testo_unit_tests -j$(nproc)
			./out/sbin/testo_unit_tests
			make testo-package -j$(nproc)
			ls out/pkg
		""" timeout 30m
		copyfrom "/root/testo_build/out/pkg/testo.rpm" "${OUT_DIR}/testo.rpm"
		copyfrom "/root/testo_build/out/symbols" "${OUT_DIR}/symbols"
	}
}

[no_snapshots: true]
test centos_build_testo_nn_server: centos_install_cuda {
	centos {
		copyto "${TMP_DIR}/onnxruntime_dist_centos_gpu" "/root/onnxruntime_dist"
		copyto "${TESTO_SRC_DIR}/3rd_party" "/root/testo/3rd_party"
		copyto "${TESTO_SRC_DIR}/docs" "/root/testo/docs"
		copyto "${TESTO_SRC_DIR}/lib" "/root/testo/lib"
		copyto "${TESTO_SRC_DIR}/src/testo_nn_server" "/root/testo/src/testo_nn_server"
		copyto "${TESTO_SRC_DIR}/src/testo_nn_server_protocol" "/root/testo/src/testo_nn_server_protocol"
		copyto "${TESTO_SRC_DIR}/src/CMakeLists.txt" "/root/testo/src/CMakeLists.txt"
		copyto "${TESTO_SRC_DIR}/CMakeLists.txt" "/root/testo/CMakeLists.txt"
		exec bash """
			export PATH="$PATH:/usr/local/bin:/usr/local/cuda/bin"
			cd /root/
			mkdir testo_build
			cd testo_build
			cmake ../testo \
				-DCMAKE_BUILD_TYPE=Release \
				-DCPACK_GENERATOR=RPM \
				-DONNX_RUNTIME_DIR=/root/onnxruntime_dist \
				-DUSE_CUDA=on
			make testo-nn-server-package -j$(nproc)
			ls out/pkg
		""" timeout 30m
		copyfrom "/root/testo_build/out/pkg/testo-nn-server.rpm" "${OUT_DIR}/testo-nn-server.rpm"
	}
}
