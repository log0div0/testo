
include "common.testo"

machine win {
	cpus: 4
	ram: 4Gb
	disk main: {
		source: "${WIN10_TEMPLATE_PATH}"
	}
}

[no_snapshots: true]
test win_start {
	win {
		start
		wait "Recycle Bin" timeout 10m
		sleep 5s
	}
}

test win_install_guest_additions: win_start {
	win {
		plug dvd "${ISO_DIR}/testo-guest-additions.iso"
		mouse click "Drive"
		sleep 5s
		mouse click "Run autorun"
		wait "Testo Guest Additions"; press Enter
		mouse click "I accept the terms";
		mouse click "Next"
		wait "Destination Folder"; press Enter
		wait "Ready to install"; press Enter
		wait "Do you want to allow"
		mouse click "Yes"
		if ("${TESTO_HYPERVISOR}" STREQUAL "qemu") {
			wait "Would you like to install"
			mouse click "Would you like to install"; sleep 5s # focus
			press Left,Enter
		}
		wait "Click the Finish button"; press Enter
		wait !"Click the Finish button"
		exec cmd "echo hello world"
		unplug dvd
		sleep 5s
	}
}

test win_install_cuda: win_install_guest_additions {
	win {
		copyto "${cuda_win_path}" "C:\\Users\\user\\Desktop\\cuda.exe"
		mouse dclick "cuda"
		wait "Do you want to allow"
		mouse click "Yes"
		wait "Extraction path"; press Enter
		wait "NVIDIA software license agreement" timeout 20m; press Enter
		wait "Installation options"; press Enter
		wait "Summary" timeout 20m; press Enter
		wait "Installer has finished"; press Enter
		wait !"Installer has finished"
		mouse rclick "cuda"
		mouse click "Delete"
		wait !"cuda"
		mouse rclick "Recycle Bin"
		mouse click "Empty"
		wait "Are you sure"
		mouse click "Yes"

		copyto "${cudnn_win_path}" "C:\\work\\cudnn.zip"
		exec cmd """
			cd C:\\work
			tar -xf cudnn.zip
			del cudnn.zip
		"""
	}
}

[no_snapshots: true]
test win_build_onnxruntime_gpu: win_install_cuda {
	win {
		win_copy_onnxruntime_srcs()
		exec cmd """
			mkdir C:\\work\\onnxruntime_build
			cd C:\\work\\onnxruntime_build
			cmake ..\\onnxruntime\\cmake \
				-DCMAKE_GENERATOR="Visual Studio 16 2019" \
				-DCMAKE_GENERATOR_PLATFORM=x64 \
				-DCMAKE_INSTALL_PREFIX=C:\\work\\onnxruntime_dist \
				-Donnxruntime_DISABLE_CONTRIB_OPS=ON \
				-Donnxruntime_BUILD_SHARED_LIB=ON \
				-Donnxruntime_BUILD_UNIT_TESTS=OFF \
				-Donnxruntime_USE_CUDA=ON \
				-Donnxruntime_CUDNN_HOME=C:\\work\\cuda
			cmake --build . --config Release --target INSTALL --parallel
		""" timeout 2h
		copyfrom "C:\\work\\onnxruntime_dist" "${TMP_DIR}/onnxruntime_dist_win_gpu"
	}
}

macro win_build_testo_guest_additions(TESTO_GUEST_ADDITIONS_HYPERVISOR, ARCH, CMAKE_GENERATOR_PLATFORM) {
	[no_snapshots: true]
	test "win_build_testo_guest_additions_${TESTO_GUEST_ADDITIONS_HYPERVISOR}_${ARCH}": win_install_guest_additions {
		win {
			copyto "${TESTO_SRC_DIR}/3rd_party" "C:\\work\\testo\\3rd_party"
			copyto "${TESTO_SRC_DIR}/docs" "C:\\work\\testo\\docs"
			copyto "${TESTO_SRC_DIR}/lib" "C:\\work\\testo\\lib"
			copyto "${TESTO_SRC_DIR}/src/testo_guest_additions" "C:\\work\\testo\\src\\testo_guest_additions"
			copyto "${TESTO_SRC_DIR}/src/testo_guest_additions_protocol" "C:\\work\\testo\\src\\testo_guest_additions_protocol"
			copyto "${TESTO_SRC_DIR}/src/CMakeLists.txt" "C:\\work\\testo\\src\\CMakeLists.txt"
			copyto "${TESTO_SRC_DIR}/CMakeLists.txt" "C:\\work\\testo\\CMakeLists.txt"
			exec cmd """
				cd C:\\work
				mkdir testo_build
				cd testo_build
				cmake ..\\testo \
					-DTESTO_GUEST_ADDITIONS_HYPERVISOR=${TESTO_GUEST_ADDITIONS_HYPERVISOR} \
					-DCMAKE_GENERATOR="Visual Studio 16 2019" \
					-DCMAKE_GENERATOR_PLATFORM=${CMAKE_GENERATOR_PLATFORM}
				cmake --build . --target testo-guest-additions-package --config Release --parallel || exit /b 1
			""" timeout 30m
			copyfrom "C:\\work\\testo_build\\out\\pkg\\Testo Guest Additions.msi" "${TMP_DIR}/${TESTO_GUEST_ADDITIONS_HYPERVISOR}/testo-guest-additions-${ARCH}.msi"
		}
	}
}

win_build_testo_guest_additions("qemu", "x64", "x64")
win_build_testo_guest_additions("qemu", "x86", "Win32")
win_build_testo_guest_additions("hyperv", "x64", "x64")
win_build_testo_guest_additions("hyperv", "x86", "Win32")

[no_snapshots: true]
test win_build_testo: win_install_guest_additions {
	win {
		copyto "${TESTO_SRC_DIR}/3rd_party" "C:\\work\\testo\\3rd_party"
		copyto "${TESTO_SRC_DIR}/docs" "C:\\work\\testo\\docs"
		copyto "${TESTO_SRC_DIR}/lib" "C:\\work\\testo\\lib"
		copyto "${TESTO_SRC_DIR}/src/testo" "C:\\work\\testo\\src\\testo"
		copyto "${TESTO_SRC_DIR}/src/testo_guest_additions_protocol" "C:\\work\\testo\\src\\testo_guest_additions_protocol"
		copyto "${TESTO_SRC_DIR}/src/testo_nn_service_protocol" "C:\\work\\testo\\src\\testo_nn_service_protocol"
		copyto "${TESTO_SRC_DIR}/src/CMakeLists.txt" "C:\\work\\testo\\src\\CMakeLists.txt"
		copyto "${TESTO_SRC_DIR}/CMakeLists.txt" "C:\\work\\testo\\CMakeLists.txt"
		exec cmd """
			cd C:\\work
			mkdir testo_build
			cd testo_build
			cmake ..\\testo \
				-DCMAKE_GENERATOR="Visual Studio 16 2019" \
				-DCMAKE_GENERATOR_PLATFORM=x64
			cmake --build . --target testo_unit_tests --config Release --parallel || exit /b 1
			out\\sbin\\Release\\testo_unit_tests || exit /b 1
			cmake --build . --target testo-package --config Release --parallel || exit /b 1
		""" timeout 30m
		copyfrom "C:\\work\\testo_build\\out\\pkg\\Testo.msi" "${OUT_DIR}/testo.msi"
	}
}

[no_snapshots: true]
test win_build_testo_nn_service: win_install_cuda {
	win {
		copyto "${TMP_DIR}/onnxruntime_dist_win_gpu" "C:\\work\\onnxruntime_dist"
		copyto "${TESTO_SRC_DIR}/3rd_party" "C:\\work\\testo\\3rd_party"
		copyto "${TESTO_SRC_DIR}/docs" "C:\\work\\testo\\docs"
		copyto "${TESTO_SRC_DIR}/lib" "C:\\work\\testo\\lib"
		copyto "${TESTO_SRC_DIR}/src/testo_nn_service" "C:\\work\\testo\\src\\testo_nn_service"
		copyto "${TESTO_SRC_DIR}/src/testo_nn_service_protocol" "C:\\work\\testo\\src\\testo_nn_service_protocol"
		copyto "${TESTO_SRC_DIR}/src/CMakeLists.txt" "C:\\work\\testo\\src\\CMakeLists.txt"
		copyto "${TESTO_SRC_DIR}/CMakeLists.txt" "C:\\work\\testo\\CMakeLists.txt"
		exec cmd """
			cd C:\\work
			mkdir testo_build
			cd testo_build
			cmake ..\\testo \
				-DCMAKE_GENERATOR="Visual Studio 16 2019" \
				-DCMAKE_GENERATOR_PLATFORM=x64 \
				-DONNX_RUNTIME_DIR=C:\\work\\onnxruntime_dist \
				-DUSE_CUDA=on \
				-DCUDNN_HOME=C:\\work\\cuda
			cmake --build . --target testo-nn-service-package --config Release --parallel || exit /b 1
		""" timeout 30m
		copyfrom "C:\\work\\testo_build\\out\\pkg\\Testo NN Service.msi" "${OUT_DIR}/testo-nn-service.msi"
	}
}
