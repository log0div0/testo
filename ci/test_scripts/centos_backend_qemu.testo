
include "centos.testo"

[no_snapshots: true]
test centos_backend_qemu_start_offline_machine: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_start_stop.testo" "/opt/scripts/action_start_stop.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_start_stop.testo --stop_on_fail --test_spec start_offline_machine | grep "stop here"
		"""
		wait "my_ubuntu_server" && "Running"
		mouse dclick "my_ubuntu_server"
		wait "Language" && "English"
	}
}

[no_snapshots: true]
test centos_backend_qemu_start_online_machine: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_start_stop.testo" "/opt/scripts/action_start_stop.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_start_stop.testo --stop_on_fail --test_spec start_online_machine | grep "domain is already running"
		"""
	}
}

[no_snapshots: true]
test centos_backend_qemu_stop_online_machine: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_start_stop.testo" "/opt/scripts/action_start_stop.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_start_stop.testo --stop_on_fail --test_spec stop_online_machine | grep "stop here"
		"""
		wait "my_ubuntu_server" && !"Running"
		mouse dclick "my_ubuntu_server"
		wait "Guest is not running"
	}
}

[no_snapshots: true]
test centos_backend_qemu_stop_offline_machine: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_start_stop.testo" "/opt/scripts/action_start_stop.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_start_stop.testo --stop_on_fail --test_spec stop_offline_machine | grep "domain is not running"
		"""
	}
}

[no_snapshots: true]
test centos_backend_qemu_unplug_plug_nic: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_nic.testo" "/opt/scripts/action_nic.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_nic.testo --stop_on_fail --test_spec unplug_plug_nic | grep "stop here"
		"""

		wait "my_ubuntu_server" && "Running"
		mouse dclick "my_ubuntu_server"
		wait "Language" && "English"

		mouse click "Virtual".from_top(1).center_bottom().move_down(20)
		wait js "find_text().match('NIC').size() == 1"
		mouse click "NIC"
		wait "Virtual network 'internet': NAT"
		mouse click "File".from_top(0).center_bottom().move_down(20)
		wait "Language" && "English"
	}
}

[no_snapshots: true]
test centos_backend_qemu_rollback_after_unplug_plug_nic: centos_backend_qemu_unplug_plug_nic {
	centos {
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_nic.testo --stop_on_fail --test_spec rollback_after_unplug_plug_nic | grep "stop here"
		"""

		wait "Language" && "English"

		mouse click "Virtual".from_top(1).center_bottom().move_down(20)
		wait js "find_text().match('NIC').size() == 2"
		mouse click "NIC".from_top(0)
		wait "Virtual network 'internet': NAT"
		mouse move 0 0
		mouse click "NIC".from_top(1)
		wait "Virtual network 'internal': Isolated network"
	}
}

[no_snapshots: true]
test centos_backend_qemu_unplug_plug_link: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_nic.testo" "/opt/scripts/action_nic.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_nic.testo --stop_on_fail --test_spec unplug_plug_link | grep "stop here"
		"""

		wait "my_ubuntu_server" && "Running"
		mouse dclick "my_ubuntu_server"
		wait "Language" && "English"

		mouse click "Virtual".from_top(1).center_bottom().move_down(20)
		wait js "find_text().match('NIC').size() == 2"
		mouse click "NIC".from_top(0)
		wait "Virtual network 'internet': NAT"
		mouse click "XML"
		wait "link state=\"up\""
		mouse move 0 0
		mouse click "NIC".from_top(1)
		wait "link state=\"down\""
		mouse click "File".from_top(0).center_bottom().move_down(20)
		wait "Language" && "English"
	}
}

[no_snapshots: true]
test centos_backend_qemu_rollback_after_unplug_plug_link: centos_backend_qemu_unplug_plug_link {
	centos {
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_nic.testo --stop_on_fail --test_spec rollback_after_unplug_plug_link | grep "stop here"
		"""

		wait "Language" && "English"

		mouse click "Virtual".from_top(1).center_bottom().move_down(20)
		wait js "find_text().match('NIC').size() == 2"
		mouse click "NIC".from_top(0)
		wait "link state=\"up\""
		mouse move 0 0
		mouse click "NIC".from_top(1)
		sleep 1s
		wait "link state=\"up\""
	}
}



[no_snapshots: true]
test centos_backend_qemu_unplug_dvd: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_unplug_dvd.testo" "/opt/scripts/action_unplug_dvd.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_unplug_dvd.testo --stop_on_fail --test_spec unplug_dvd | grep "stop here"
		"""

		wait "my_ubuntu_server" && "Running"
		mouse dclick "my_ubuntu_server"
		wait "Language" && "English"

		mouse click "Virtual".from_top(1).center_bottom().move_down(20)
		mouse click "IDE CDROM 1".from_left(0)
		wait "No media selected"
	}
}

[no_snapshots: true]
test centos_backend_qemu_rollback_after_unplug_dvd: centos_backend_qemu_unplug_dvd {
	centos {
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_unplug_dvd.testo --stop_on_fail --test_spec rollback_after_unplug_dvd | grep "stop here"
		"""

		mouse click "File".from_top(0).center_bottom().move_down(20)
		wait "Language" && "English"

		mouse click "Virtual".from_top(1).center_bottom().move_down(20)
		mouse click "IDE CDROM 1".from_left(0)
		wait "ubuntu-16.04.6-server-amd64"
		mouse click "File".from_top(0).center_bottom().move_down(20)
		wait "Language" && "English"
	}
}

[no_snapshots: true]
test centos_backend_qemu_rollback_after_plug_dvd: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_unplug_dvd.testo" "/opt/scripts/action_unplug_dvd.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_unplug_dvd.testo --stop_on_fail --test_spec rollback_after_plug_dvd_part2 | grep "stop here"
		"""

		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_unplug_dvd.testo --stop_on_fail --test_spec rollback_after_plug_dvd_part2 | grep "stop here"
		"""
	}
}

[no_snapshots: true]
test centos_backend_qemu_wait: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_wait.testo" "/opt/scripts/action_wait.testo"

		exec bash """
			set +o pipefail
			set +e
			output=$(testo run /opt/scripts/action_wait.testo --stop_on_fail --test_spec wait_expr_bug_0)
			[[ $output == *"Error while performing action wait !\\\"Unexisting text\\\""* ]]
			[[ $output == *"Timeout"* ]]
		"""

		exec bash """
			set +o pipefail
			set +e
			output=$(testo run /opt/scripts/action_wait.testo --stop_on_fail --test_spec wait_expr_bug_1)
			[[ $output == *"Error while performing action wait !\\\"Unexisting text\\\""* ]]
			[[ $output == *"Timeout"* ]]
		"""

		exec bash """
			set +o pipefail
			set +e
			output=$(testo run /opt/scripts/action_wait.testo --stop_on_fail --test_spec wait_expr_bug_2)
			[[ $output == *"Error while performing action wait !\\\"Lala\\\""* ]]
			[[ $output == *"Timeout"* ]]
		"""
	}
}

test centos_backend_qemu_install_ubuntu_server: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/install_ubuntu.testo" "/opt/scripts/install_ubuntu.testo"
		copyto "${TEST_ASSETS_DIR}/backend/install_guest_additions.testo" "/opt/scripts/install_guest_additions.testo"
		exec bash """
			testo run /opt/scripts/install_ubuntu.testo --stop_on_fail --test_spec install_ubuntu_server
		""" timeout 30m
	}
}

test centos_backend_qemu_install_guest_additions: centos_backend_qemu_install_ubuntu_server {
	centos {
		copyto "${OUT_DIR}/testo-guest-additions.iso" "/opt/iso/testo-guest-additions.iso"
		exec bash """
			testo run /opt/scripts/install_guest_additions.testo --test_spec install_ubuntu_server_guest_additions
		""" timeout 30m
	}
}

[no_snapshots: true]
test centos_backend_qemu_cache_miss: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/cache_miss/original.testo" "/opt/scripts/script.testo"

		exec bash """
			testo run /opt/scripts/script.testo
		""" timeout 30m

		copyto "${TEST_ASSETS_DIR}/cache_miss/modified.testo" "/opt/scripts/script.testo"

		open_terminal()
		enter_sudo()

		type "testo run /opt/scripts/script.testo"; press Enter
		wait "Because of the cache loss"
		wait js "find_text().match('parent').size() == 1"
		wait js "find_text().match('test_child1').size() == 1"
		wait js "find_text().match('test_child2').size() == 1"
		wait js "find_text().match('child3').size() == 1"
	}
}
