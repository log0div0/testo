
include "centos.testo"

[no_snapshots: true]
test centos_backend_qemu_start_offline_machine: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_start_stop.testo" "/opt/scripts/action_start_stop.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_start_stop.testo --stop_on_fail --test_spec start_offline_machine | grep "stop here"
		"""
		wait "my_ubuntu_server" && "Running"
		mouse dclick "my_ubuntu_server"
		wait "Language" && "English"
	}
}

[no_snapshots: true]
test centos_backend_qemu_start_online_machine: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_start_stop.testo" "/opt/scripts/action_start_stop.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_start_stop.testo --stop_on_fail --test_spec start_online_machine | grep "domain is already running"
		"""
	}
}

[no_snapshots: true]
test centos_backend_qemu_stop_online_machine: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_start_stop.testo" "/opt/scripts/action_start_stop.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_start_stop.testo --stop_on_fail --test_spec stop_online_machine | grep "stop here"
		"""
		wait "my_ubuntu_server" && !"Running"
		mouse dclick "my_ubuntu_server"
		wait "Guest is not running"
	}
}

[no_snapshots: true]
test centos_backend_qemu_stop_offline_machine: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_start_stop.testo" "/opt/scripts/action_start_stop.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_start_stop.testo --stop_on_fail --test_spec stop_offline_machine | grep "domain is not running"
		"""
	}
}

[no_snapshots: true]
test centos_backend_qemu_wait: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_wait.testo" "/opt/scripts/action_wait.testo"

		exec bash """
			set +o pipefail
			set +e
			output=$(testo run /opt/scripts/action_wait.testo --stop_on_fail --test_spec wait_expr_bug_0)
			[[ $output == *"Error while performing action wait !\\\"Unexisting text\\\""* ]]
			[[ $output == *"Timeout"* ]]
		"""

		exec bash """
			set +o pipefail
			set +e
			output=$(testo run /opt/scripts/action_wait.testo --stop_on_fail --test_spec wait_expr_bug_1)
			[[ $output == *"Error while performing action wait !\\\"Unexisting text\\\""* ]]
			[[ $output == *"Timeout"* ]]
		"""

		exec bash """
			set +o pipefail
			set +e
			output=$(testo run /opt/scripts/action_wait.testo --stop_on_fail --test_spec wait_expr_bug_2)
			[[ $output == *"Error while performing action wait !\\\"Lala\\\""* ]]
			[[ $output == *"Timeout"* ]]
		"""
	}
}

test centos_backend_qemu_install_ubuntu_server: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/install_ubuntu.testo" "/opt/scripts/install_ubuntu.testo"
		exec bash """
			testo run /opt/scripts/install_ubuntu.testo --stop_on_fail --test_spec install_ubuntu_server
		""" timeout 30m
	}
}

macro exec_bash(script) {
	type "clear"; press Enter
	type "${script} && echo result is $?"; press Enter
	wait "result is 0"
}

[no_snapshots: true]
test centos_backend_qemu_plug_flash: centos_backend_qemu_install_ubuntu_server {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/action_flash.testo" "/opt/scripts/action_flash.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_flash.testo --stop_on_fail --test_spec plug_flash | grep "stop here"
		""" timeout 30m

		wait "my_ubuntu_server" && "Running"
		mouse dclick "my_ubuntu_server"
		wait "Welcome to Ubuntu"
		type "sudo su"; press Enter
		wait "password for user"; type "1111"; press Enter
		wait "root@ubuntu"
		exec_bash("mount /dev/sdb1 /media")
	}
}

[no_snapshots: true]
test centos_backend_qemu_plug_flash_with_files: centos_backend_qemu_install_ubuntu_server {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/action_flash.testo" "/opt/scripts/action_flash.testo"
		exec bash """
			mkdir /opt/flash_folder
			mkdir /opt/flash_folder/first_inner_folder
			mkdir /opt/flash_folder/first_inner_folder/super_inner_folder
			mkdir /opt/flash_folder/second_inner_folder

			echo "Hello from root folder" > /opt/flash_folder/hello1.txt
			echo "Hello from first inner folder" > /opt/flash_folder/first_inner_folder/hello2.txt
			echo "Hello from second inner folder" > /opt/flash_folder/second_inner_folder/hello3.txt

			truncate -s 5000000000 /opt/flash_folder/first_inner_folder/super_inner_folder/super_big_file.txt
		"""

		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_flash.testo --stop_on_fail --test_spec plug_flash_with_files --report_folder /opt/reports/ | grep "stop here"
		""" timeout 30m

		wait "my_ubuntu_server" && "Running"
		mouse dclick "my_ubuntu_server"
		wait "Welcome to Ubuntu"
		type "sudo su"; press Enter
		wait "password for user"; type "1111"; press Enter
		wait "root@ubuntu"
		exec_bash("mount /dev/sdb1 /media")
		type "ls -l /media"; press Enter
		wait "hello1.txt" && "first_inner_folder" && "second_inner_folder"
		type "clear"; press Enter

		exec_bash("""[ "$(cat /media/hello1.txt)" == "Hello from root folder" ]""")
		type "clear"; press Enter

		type "ls -l /media/first_inner_folder"; press Enter
		wait "hello2.txt" && "super_inner_folder"

		exec_bash("""[ "$(cat /media/first_inner_folder/hello2.txt)" == "Hello from first inner folder" ]""")
		type "clear"; press Enter

		type "ls -l /media/second_inner_folder"; press Enter
		wait "hello3.txt"

		exec_bash("""[ "$(cat /media/second_inner_folder/hello3.txt)" == "Hello from second inner folder" ]""")
		type "clear"; press Enter

		type "ls -l /media/first_inner_folder/super_inner_folder"; press Enter
		wait "super_big_file.txt"

		exec_bash("""[ "$(stat -c %s /media/first_inner_folder/super_inner_folder/super_big_file.txt)" == "5000000000" ]""")
		type "clear"; press Enter
	}
}

[no_snapshots: true]
test centos_backend_qemu_plug_flash_exceptions: centos_backend_qemu_install_ubuntu_server {
	centos {
		copyto "${TEST_ASSETS_DIR}/backend/action_flash.testo" "/opt/scripts/action_flash.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_flash.testo --stop_on_fail --test_spec plug_already_plugged_flash | grep "specified flash my_flash is already plugged into this virtual machine"
			#testo run /opt/scripts/action_flash.testo --stop_on_fail --test_spec plug_already_plugged_flash_2
		""" timeout 30m
	}
}

[no_snapshots: true]
test centos_backend_qemu_create_simple_vm: centos_prepare_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/vm_creation/vm_create.testo" "/opt/scripts/vm_create.testo"
		exec bash """
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_simple_vm			
		""" timeout 30m

		wait "my_ubuntu_server"
	}
}

[no_snapshots: true]
test centos_backend_qemu_create_vm_after_manual_delete_no_disks: centos_backend_qemu_create_simple_vm {
	centos {
		mouse rclick "my_ubuntu_server";
		mouse click "Delete"
		mouse click "Delete associated storage files"
		wait !"hda"
		mouse click "Delete".from_bottom(0)

		exec bash """
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_simple_vm			
		""" timeout 30m

		wait "my_ubuntu_server"
	}
}

[no_snapshots: true]
test centos_backend_qemu_clean_after_manual_delete_no_disks: centos_backend_qemu_create_simple_vm {
	centos {
		mouse rclick "my_ubuntu_server";
		mouse click "Delete"
		mouse click "Delete associated storage files"
		wait !"hda"
		mouse click "Delete".from_bottom(0)

		exec bash """
			testo clean	| grep 'Deleted virtual machine my_ubuntu_server'
		""" timeout 30m

		exec bash "!([ -f /var/lib/libvirt/testo/testo-storage-pool/my_ubuntu_server@main.img ])"
	}
}


