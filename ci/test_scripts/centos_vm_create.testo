include "centos.testo"

test centos_backend_qemu_create_simple_vm: centos_install_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/vm_creation/vm_create.testo" "/opt/scripts/vm_create.testo"
		exec bash """
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_vm
		""" timeout 30m

		wait "basic_machine"
	}
}

[no_snapshots: true]
test centos_backend_qemu_create_simple_vm_2: centos_install_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/vm_creation/vm_create.testo" "/opt/scripts/vm_create.testo"
		exec bash """
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_vm_2
		""" timeout 30m

		wait "basic_machine_2"
	}
}


[no_snapshots: true]
test centos_backend_qemu_create_simple_vm_uefi: centos_install_testo {
	centos {
		copyto "ovmf/OVMF_CODE.fd" "/usr/share/OVMF/OVMF_CODE.fd"
		copyto "${TEST_ASSETS_DIR}/vm_creation/vm_create.testo" "/opt/scripts/vm_create.testo"
		exec bash """
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_vm_uefi | grep "RUN SUCCESSFULLY: 1"
		""" timeout 30m

		exec bash """
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_vm_uefi | grep "UP-TO-DATE: 1"
		""" timeout 30m

		exec bash "touch -m /usr/share/OVMF/OVMF_CODE.fd"

		exec bash """
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_vm_uefi --assume_yes | grep "RUN SUCCESSFULLY: 1"
		""" timeout 30m
	}
}


[no_snapshots: true]
test centos_backend_qemu_create_simple_vm_qxl: centos_install_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/vm_creation/vm_create.testo" "/opt/scripts/vm_create.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_vm_qxl | grep "stop here"
		""" timeout 30m

		wait "basic_machine_qxl"
		mouse dclick "basic_machine_qxl"
		wait "Language"
		mouse click "Virtual".from_top(1).center_bottom().move_down(20)
		wait "Video QXL"
	}
}

[no_snapshots: true]
test centos_backend_qemu_create_usb2_1: centos_install_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/vm_creation/vm_create.testo" "/opt/scripts/vm_create.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_machine_usb2_1 | grep "stop here"
		""" timeout 30m

		wait "basic_machine_usb2_1"
		mouse dclick "basic_machine_usb2_1"
		wait "Language"
		mouse click "Virtual".from_top(1).center_bottom().move_down(20)
		mouse click "Controller PCI 0"; press Down
		wait "USB 2"
	}
}

[no_snapshots: true]
test centos_backend_qemu_create_usb2_2: centos_install_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/vm_creation/vm_create.testo" "/opt/scripts/vm_create.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_machine_usb2_2 | grep "stop here"
		""" timeout 30m

		wait "basic_machine_usb2_2"
		mouse dclick "basic_machine_usb2_2"
		wait "Language"
		mouse click "Virtual".from_top(1).center_bottom().move_down(20)
		mouse click "Controller PCI 0"; press Down
		wait "USB 2"
	}
}


[no_snapshots: true]
test centos_backend_qemu_create_usb3: centos_install_testo {
	centos {
		copyto "${TEST_ASSETS_DIR}/vm_creation/vm_create.testo" "/opt/scripts/vm_create.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_machine_usb3 | grep "stop here"
		""" timeout 30m

		wait "basic_machine_usb3"
		mouse dclick "basic_machine_usb3"
		wait "Language"
		mouse click "Virtual".from_top(1).center_bottom().move_down(20)
		mouse click "Controller PCI 0"; press Down
		wait "USB 3"
	}
}
[no_snapshots: true]
test centos_backend_qemu_create_vm_after_manual_delete_no_disks: centos_backend_qemu_create_simple_vm {
	centos {
		mouse rclick "basic_machine";
		mouse click "Delete"
		mouse click "Delete associated storage files"
		wait !"hda"
		mouse click "Delete".from_bottom(0)

		exec bash """
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_vm
		""" timeout 30m

		wait "basic_machine"
	}
}

[no_snapshots: true]
test centos_backend_qemu_clean_after_manual_delete_no_disks: centos_backend_qemu_create_simple_vm {
	centos {
		mouse rclick "basic_machine";
		mouse click "Delete"
		mouse click "Delete associated storage files"
		wait !"hda"
		mouse click "Delete".from_bottom(0)

		exec bash """
			testo clean --assume_yes | grep 'Deleted virtual machine basic_machine'
		""" timeout 30m

		exec bash "!([ -f /var/lib/libvirt/testo/testo-storage-pool/basic_machine@main.img ])"
	}
}

[no_snapshots: true]
test centos_backend_qemu_meta_version0_vm_recovery: centos_backend_qemu_create_simple_vm {
	centos {
		exec python3 """
			import json

			with open('/var/lib/libvirt/testo/vm_metadata/basic_machine/basic_machine__init') as data_file:
			    data = json.load(data_file)

			del data['opaque']

			with open('/var/lib/libvirt/testo/vm_metadata/basic_machine/basic_machine__init', 'w') as data_file:
			    data = json.dump(data, data_file)
		"""

		exec bash """
			testo run /opt/scripts/vm_create.testo --test_spec create_basic_vm | grep "Creating virtual machine basic_machine"
		""" timeout 30m

	}
}

[no_snapshots: true]
test centos_backend_qemu_meta_version1_vm_recovery: centos_backend_qemu_create_simple_vm {
	centos {
		exec python3 """
			import json

			with open('/var/lib/libvirt/testo/vm_metadata/basic_machine/basic_machine__init') as data_file:
			    data = json.load(data_file)

			del data['metadata_version']

			with open('/var/lib/libvirt/testo/vm_metadata/basic_machine/basic_machine__init', 'w') as data_file:
			    data = json.dump(data, data_file)
		"""

		exec bash """
			testo run /opt/scripts/vm_create.testo --test_spec create_basic_vm | grep "Creating virtual machine basic_machine"
		""" timeout 30m

	}
}
