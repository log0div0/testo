
include "debian.testo"

[no_snapshots: true]
test debian_backend_qemu_unplug_plug_nic: debian_install_testo {
	debian {
		copyto "${TEST_ASSETS_DIR}/backend/common.testo" "/opt/scripts/common.testo"
		copyto "${TEST_ASSETS_DIR}/backend/action_nic.testo" "/opt/scripts/action_nic.testo"
		exec bash """
			set +o pipefail
			testo run /opt/scripts/action_nic.testo --stop_on_fail --test_spec unplug_plug_nic | grep "stop here"
		"""

		wait "Running"
		mouse dclick "Running"
		#wait "Language" && "English"

		wait "my_ubuntu_server on QEMU/KVM"
		mouse click "Virtual".from_top(1).center_bottom().move_down(20)
		wait js "return find_text().match('NIC').size() == 2"
		mouse click "NIC".from_top(0)
		wait "Host device ens7: macvtap"
		mouse move 0 0
		mouse click "NIC".from_top(1)
		wait "Virtual network 'internet': NAT"
		#mouse click "File".from_top(1).center_bottom().move_down(20)
		#wait "Language" && "English"
	}
}

[no_snapshots: true]
test debian_backend_create_vm_uefi: debian_install_testo {
	debian {
		copyto "${TEST_ASSETS_DIR}/vm_creation/vm_create.testo" "/opt/scripts/vm_create.testo"
		exec bash """
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_vm_uefi | grep "RUN SUCCESSFULLY: 1"
		""" timeout 30m

		exec bash """
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_vm_uefi | grep "UP-TO-DATE: 1"
		""" timeout 30m

		exec bash "touch -m /usr/share/OVMF/OVMF_CODE.fd"

		exec bash """
			testo run /opt/scripts/vm_create.testo --stop_on_fail --test_spec create_basic_vm_uefi --assume_yes | grep "RUN SUCCESSFULLY: 1"
		""" timeout 30m
	}
}
