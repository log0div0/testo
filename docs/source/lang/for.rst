..  SPDX-License-Identifier: BSD-3-Clause
    Copyright(c) 2010-2014 Intel Corporation.

.. _for:

Циклы
=====

Язык Testo поддерживает использование циклов. Формат циклов выглядит следующим образом:

.. code-block:: none

	for <counter> in <range> {
		action1
		action2
		action3
		...
	} [else {
		action1
		action2
		...
	}]

В заголовке цикла необходимо объявить переменную ``<counter>``, которая будет использоваться как счетчик. Количество итераций цикла можно указать с помощью диапазона ``<range>``. Счетчик будет последовательно принимать значения, указанные в диапазоне, **включая границы диапазона**.

.. note ::
	Язык запрещает использование бесконечных циклов, т.к. подразумевается, что тест рано или поздно должен обязательно закончиться

Внутри цикла можно использовать все те конструкции, которые можно указывать в теле команд, из которых состоит тест: действия, условия, циклы, вызов макросов. Внутри цикла дополнительно можно использовать действия управления циклом: ``continue`` (переход к следующей итерации) и ``break`` (выход из цикла).

Для цикла можно указать необязательную секцию ``else``. Управление переходит в эту секцию в том случае, если тело цикла ``for`` успешно отработало (т.е. за время работы цикла не был вызыван ``break``)

Внутри цикла можно обратиться к переменной-счетчику, как к обычной переменной.

Пример:

.. code-block:: none

	test some_test {
		some_vm {
			for i in 5..100 {
				if ("${i}" EQUAL 10) {
					continue
				}
				print "${i}"
				if ("${i}" EQUAL 20) {
					break
				}
			} else {
				print "All the cycles worked without a break"
			}
		}
	}

Заметим, что в этом случае к блоку ``else`` управление никогда не перейдет, т.к. на пятнадцатой итерации обязательно сработает ``break``
