..  SPDX-License-Identifier: BSD-3-Clause

.. _js_tensor_textline:

Класс Tensor<TextLine>
======================

Класс Tensor<TextLine> хранит информацию о строках, найденных на экране.

Методы
------

match(value)
++++++++++++

**Описание**

 Вернуть все вхождения подстроки ``value``. Например, если объект класса ``Tensor<TextLine>`` содержит три строки "Установить программное обеспечение", "Установить" и "Не устанавливать", то вызов метода ``match("Установить")`` вернёт две строки "Установить" (Текст у них будет одинаковый, но координаты - разные)

**Аргументы**:

	- ``value <string>`` - искомая подстрока.

**Возвращаемое значение** - объект класса ``Tensor<TextLine>``, со строками, подходящими под критерий.

match_foreground(value)
+++++++++++++++++++++++

**Описание**

 Вернуть все строки с шрифтом заданного цвета. Список доступных цветов: white, gray, black, red, orange, yellow, green, cyan, blue, purple

**Аргументы**:

	- ``value <string>`` - требуемый цвет шрифта в строке.

**Возвращаемое значение** - объект класса ``Tensor<TextLine>``, со строками, подходящими под критерий.

.. note ::
	Если в строке сочетается шрифт с несколькими разыми цветами, результат работы будет неопределен


match_background(value)
+++++++++++++++++++++++

**Описание**

 Вернуть все строки с фоном заданного цвета. Список доступных цветов: white, gray, black, red, orange, yellow, green, cyan, blue, purple

**Аргументы**:

	- ``value <string>`` - требуемый цвет фона в строке.

**Возвращаемое значение** - объект класса ``Tensor<TextLine>``, со строками, подходящими под критерий.

.. note ::
	Если в строке сочетается шрифт с несколькими разыми цветами фона, результат работы будет неопределен

from_top(index)
+++++++++++++++

**Описание**

 Выбрать строку с индексом index из массива строк, отсортированных сверху-вниз.

**Аргументы**:

	- ``index <number>`` - индекс строки, которую надо выбрать. Нулевой индекс означает выбор "самой верхней" строки.

**Возвращаемое значение** - объект класса ``Tensor<TextLine>``, содержащий только одну выбранную строку

.. note::
	Строки сортируются по высоте на основе координаты Y верхнего края


from_bottom(index)
++++++++++++++++++

**Описание**

 Выбрать строку с индексом index из массива строк, отсортированных снизу-вверх.

**Аргументы**:

	- ``index <number>`` - индекс строки, которую надо выбрать. Нулевой индекс означает выбор "самой нижней" строки.

**Возвращаемое значение** - объект класса ``Tensor<TextLine>``, содержащий только одну выбранную строку

.. note::
	Строки сортируются по высоте на основе координаты Y нижнего края


from_left(index)
++++++++++++++++

**Описание**

 Выбрать строку с индексом index из массива строк, отсортированных слева-направо.

**Аргументы**:

	- ``index <number>`` - индекс строки, которую надо выбрать. Нулевой индекс означает выбор "самой левой" строки.

**Возвращаемое значение** - объект класса ``Tensor<TextLine>``, содержащий только одну выбранную строку

.. note::
	Строки сортируются по горизонтале на основе координаты X левого края


from_right(index)
+++++++++++++++++

**Описание**

 Выбрать строку с индексом index из массива строк, отсортированных справо-налево.

**Аргументы**:

	- ``index <number>`` - индекс строки, которую надо выбрать. Нулевой индекс означает выбор "самой правой" строки.

**Возвращаемое значение** - объект класса ``Tensor<TextLine>``, содержащий только одну выбранную строку

.. note::
	Строки сортируются по горизонтале на основе координаты X правого края

center()
++++++++

**Описание**

 Вернуть координаты геометрического центра строки

**Аргументы**: нет

**Возвращаемое значение** - объект класса ``Point`` с координатами геометрического центра строки

.. warning::
	Обращение к этому полю возможно только в том случае, если количество строк, хранимых в Tensor<TextLine>, ровно единице.

left_bottom()
+++++++++++++

**Описание**

 Вернуть координаты левого нижнего угла строки

**Аргументы**: нет

**Возвращаемое значение** - объект класса ``Point`` с координатами левого нижнего угла строки

.. warning::
	Обращение к этому полю возможно только в том случае, если количество строк, хранимых в Tensor<TextLine>, ровно единице.

left_center()
+++++++++++++

**Описание**

 Вернуть координаты левого края строки

**Аргументы**: нет

**Возвращаемое значение** - объект класса ``Point`` с координатами левого края строки

.. warning::
	Обращение к этому полю возможно только в том случае, если количество строк, хранимых в Tensor<TextLine>, ровно единице.

left_top()
++++++++++

**Описание**

 Вернуть координаты левого верхнего угла строки

**Аргументы**: нет

**Возвращаемое значение** - объект класса ``Point`` с координатами левого верхнего угла строки

.. warning::
	Обращение к этому полю возможно только в том случае, если количество строк, хранимых в Tensor<TextLine>, ровно единице.

center_bottom()
+++++++++++++++

**Описание**

 Вернуть координаты нижнего края надписи

**Аргументы**: нет

**Возвращаемое значение** - объект класса ``Point`` с координатами нижнего края строки

.. warning::
	Обращение к этому полю возможно только в том случае, если количество строк, хранимых в Tensor<TextLine>, ровно единице.

center_top()
++++++++++++

**Описание**

 Вернуть координаты верхнего края надписи

**Аргументы**: нет

**Возвращаемое значение** - объект класса ``Point`` с координатами верхнего края строки

.. warning::
	Обращение к этому полю возможно только в том случае, если количество строк, хранимых в Tensor<TextLine>, ровно единице.

right_bottom()
++++++++++++++

**Описание**

Вернуть координаты правого нижнего угла строки

**Аргументы**: нет

**Возвращаемое значение** - объект класса ``Point`` с координатами правого нижнего угла строки

.. warning::
	Обращение к этому полю возможно только в том случае, если количество строк, хранимых в Tensor<TextLine>, ровно единице.

right_center()
++++++++++++++

**Описание**

 Вернуть координаты правого края строки

**Аргументы**: нет

**Возвращаемое значение** - объект класса ``Point`` с координатами правого края строки

.. warning::
	Обращение к этому полю возможно только в том случае, если количество строк, хранимых в Tensor<TextLine>, ровно единице.

right_top()
+++++++++++

**Описание**

 Вернуть координаты правого верхнего угла строки

**Аргументы**: нет

**Возвращаемое значение** - объект класса ``Point`` с координатами правого верхнего угла строки

.. warning::
	Обращение к этому полю возможно только в том случае, если количество строк, хранимых в Tensor<TextLine>, ровно единице.

Поля
----

x <number>
+++++++++

**Описание**

Значение координаты X геометрического центра строки

.. warning::
	Обращение к этому полю возможно только в том случае, если количество строк, хранимых в Tensor<TextLine>, ровно единице.

y <number>
+++++++++

**Описание**

Значение координаты Y геометрического центра строки

.. warning::
	Обращение к этому полю возможно только в том случае, если количество строк, хранимых в Tensor<TextLine>, ровно единице.
