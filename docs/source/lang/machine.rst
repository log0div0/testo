..  SPDX-License-Identifier: BSD-3-Clause
    Copyright(c) 2010-2014 Intel Corporation.

.. _machine:

machine
=======

Для объявления виртуальных машин используется директива ``machine``. Формат директивы выглядит следующим образом:

.. code-block:: none

	machine <name> {
		<attr1 [name]: <value1>
		<attr2 [name]: <value1>
		<attr3 [name]: <value1>
		...
	}

.. note::
	Объявление виртуальной машины само по себе не ведет к ее созданию в гипервизоре. Реальное создание виртуальной машины произойдет при запуске теста, в котором участвует эта машина.

В сущности, объявление виртуальной машины состоит из перечисления атрибутов, часть из которых является обязательными. Атрибуты должны быть отделены друг от друга переносом строки. После объявления машины также должен следовать символ переноса строки.

Для виртуальной машины необходимо указать ее имя ``<name>`` в формате :ref:`идентификатора<id>`. Имя виртуальной машины должно быть уникальным среди других виртуальных машин.

Атрибут состоит из названия, необязательного имени и  обязательного значения. В качестве имени используется идентификатор в формате идентификатора, а в качестве значения могут выступать:

	- числовая константа
	- спецификатор количества памяти
	- строка
	- группа вложенных атрибутов

Некоторые атрибуты также могут иметь имя. В настоящее время единственный атрибут, который обязан иметь имя - это атрибут ``nic``.

Для виртуальной машины существует набор обязательных атрибутов, которые необходимо указать:

	*  ``cpus`` - количество ядер процессора. Значение атрибута должно быть **числом**.
	*  ``ram`` - количество оперативной памяти. Значение атрибута должно быть **спецификатором количества памяти**.
	*  ``iso`` - путь к файлу с iso-образом, который можно использовать для установки ОС. Значение атрибута должно быть **строкой**. Если в строке присутствует обращение к переменной, то ее значение будет взято из переменной окружения.
	*  ``disk_size`` - размер основного жесткого диска. Значение атрибута должно быть **спецификатором количества памяти**.

Для указания сетевых адаптеров можно использовать атрибут ``nic``. Атрибут ``nic`` должен иметь имя (чтобы различать адаптеры между собой), и в качестве значения должна выступать группа вложенных атрибутов:

	* ``attached_to`` - тип подключения адаптера. Значение атрибута может принимать одно из следующих значений:

		* ``nat`` - адаптер подключен к основной сети хостовой машины через маршрутизатор и может иметь доступ к внешней сети (например, к Интернету)
		* ``internal`` - адаптер подключен к внутренней изолированной сети гипервизора. В случае подключения такого типа у адаптера должен дополнительно указываться атрибут ``network``
	* ``network`` - имя внутренней изолированной сети, к которой подключается адаптер. Нужно использовать в случае, если тип подключения адаптера к сети - ``internal``
	* ``adapter_type`` - модель адаптера. Необязательный атрибут. Значение атрибута может принимать одно из следующих значений: ``ne2k_pci``, ``i82551``, ``i82557b``, ``i82559er``, ``rtl8139``, ``e1000``, ``pcnet``, ``virtio``, ``sungem``. Если не указать этот атрибут, то адаптер будет создан с моделью по-умолчанию, которая для гипервизора QEMU принимает значение ``rtl8139``
	* ``mac`` - MAC-адрес адаптера. Необязательный атрибут. Значение атрибута должно быть строкой в формате ``00:11:22:33:44:55``. Если не указать этот атрибут, то МАС-адрес будет сгенерирован гипервизором случайным образом.

Наконец, разработчик может указать необязательный атрибут ``metadata``. В качестве значения должна указываться подгруппа строковых атрибутов. В этой секции могут записываться любые дополнительные данные, к которым затем можно обращаться в процессе выполнения тестов.

Ниже представлен итоговый пример конфигурации виртуальной машины. Нужно отметить, что значение ``$ISO_DIR`` будет вычислено, исходя из значения переменной окружения ``ISO_DIR``. Если такой переменной окружения не задано, то итоговая строка примет значение ``/ubuntu-16.04.6-server-amd64.iso"``

.. code-block:: none

	machine example_machine {
		cpus: 1
		ram: 1024Mb
		iso: $ISO_DIR + "/ubuntu-16.04.6-server-amd64.iso"
		disk_size: 4Gb
		nic nat: {
			attached_to: "nat"
			adapter_type: "e1000"
		}

		nic WAN: {
			attached_to: "internal"
			network: "net2"
			mac: "52:54:00:00:00:00"
			adapter_type: "e1000"
		}

		nic LAN: {
			attached_to: "internal"
			network: "net1"
			mac: "52:54:00:00:00:11"
			adapter_type: "e1000"
		}

		metadata: {
			login: "vpn-sgw1"
			password: "1111"
			host_name: "vpn-sgw1"
		}
	}

Кешируемость виртуальных машин
------------------------------

В платформе Testo предусмотрен механизм определения актуальности конфигурации виртуальных машин. Если с момента последнего запуска конфигурация виртуальной машины существенно изменилась, то саму виртуальную машину необходимо пересоздать, а все тесты, в которых она учавствует - прогнать заново. Это одна из проверок, которая определяет :ref:`актуальность кеша теста <test_cksum>`.

Ниже приведен список вопросов, которые платформа Testo считает существенными при определении закешированности конфигурации виртуальной машины:

	- Изменилось ли значение атрибутов ``cpu``, ``ram``, ``disk_size``?
	- Изменились ли настройки или названия сетевых адаптеров? (Если поменялся порядок следования сетевых адаптеров, кеш считается актуальным)
	- Изменился ли файл, указанный в атрибуте ``iso``?

Если ответ хотя бы на один из этих вопросов - положительный, то кеш считается неактуальным и виртуальную машину необходимо создать заново.

.. note ::
	На кеш не влияет изменение строки, указанной в атрибуте ``iso``. Проверка осуществляется исключительно по фактическому iso-файлу

.. note ::
	На кеш не влияет изменение метаданных ``metadata``. Но изменение значения метаданных сбросит кеш тестов, в которых происходит обращение к соответствующей метаданной


Служебные метаданные
--------------------

Платформа Testo автоматически добавляет некоторые служебные метаданные при создании виртуальной машины, к которым можно обращаться в тестах, как и к любым другим переменным. На текущий момент обьем таких метаданных небольшой:

	- ``vm_name`` - имя виртуальной машины
	- ``vm_nic_count`` - количество сетевых адаптеров в конфигурации виртуальной машины