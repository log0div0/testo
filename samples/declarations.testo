machine client {
	cpus: 1
	os_type: "ubuntu_64"
	ram: 512Mb
	iso: $ISO_PATH + "/ubuntu-16.04.5-server-amd64.iso"
	disk_size: 4Gb
	nic nat: {
		slot: 0
		attached_to: "nat"
	}

	nic master_side: {
		slot: 1
		attached_to: "internal"
		network: "net1"
		mac: "52:54:00:00:00:AA"
	}

	metadata: {
		login: "root"
		password: "1111"
	}
}

machine client2 {
	cpus: 1
	os_type: "ubuntu_64"
	ram: 512Mb
	iso: $ISO_PATH + "/ubuntu-16.04.5-server-amd64.iso"
	disk_size: 4Gb
	nic nat: {
		slot: 0
		attached_to: "nat"
	}

	nic master_side: {
		slot: 1
		attached_to: "internal"
		network: "net1"
		mac: "52:54:00:11:00:aa"
	}

	metadata: {
		login: "root"
		password: "1111"
	}
}

machine server {
	cpus: 1
	os_type: "ubuntu_64"
	ram: 512Mb
	iso: $ISO_PATH + "/ubuntu-16.04.5-server-amd64.iso"
	disk_size: 4Gb
	nic nat: {
		slot: 0
		attached_to: "nat"
	}

	nic master_side: {
		slot: 1
		attached_to: "internal"
		network: "net2"
		mac: "52:54:00:22:00:aa"
	}

	metadata: {
		login: "root"
		password: "1111"
	}
}

machine master {
	cpus: 2
	os_type: "ubuntu_64"
	ram: 2048Mb
	iso: $ISO_PATH + "/ubuntu-16.04.5-server-amd64.iso"
	disk_size: 5Gb
	nic nat: {
		slot: 0
		attached_to: "nat"
		adapter_type: "virtio-net"
	}

	nic client_side: {
		slot: 1
		attached_to: "internal"
		network: "net1"
		mac: "52:54:00:33:00:aa"
	}

	nic server_side: {
		slot: 2
		attached_to: "internal"
		network: "net2"
		mac: "52:54:00:33:00:bb"
	}

	nic slave_side: {
		slot: 3
		attached_to: "internal"
		network: "net3"
		mac: "52:54:00:33:00:cc"
	}

	metadata: {
		login: "root"
		password: "1111"
	}
}

machine slave {
	cpus: 2
	os_type: "ubuntu_64"
	ram: 2Gb
	iso: $ISO_PATH + "/ubuntu-16.04.5-server-amd64.iso"
	disk_size: 5Gb
	nic nat: {
		slot: 0
		attached_to: "nat"
	}

	nic client_side: {
		slot: 1
		attached_to: "internal"
		network: "net1"
		mac: "52:54:00:44:00:aa"
	}

	nic server_side: {
		slot: 2
		attached_to: "internal"
		network: "net2"
		mac: "52:54:00:44:00:bb"
	}

	nic master_side: {
		slot: 3
		attached_to: "internal"
		network: "net3"
		mac: "52:54:00:44:00:cc"
	}

	metadata: {
		login: "root"
		password: "1111"
	}
}

snapshot ubuntu_installed {
	wait "Tibetan"; press Enter
	wait for 4s
	press Enter
	wait "Choose the language";	press Enter
	wait "Country, territory or area"; press Enter
	wait "You can try to have";	press Enter
	wait "country of origin for the keyboard"; press Enter
	wait "Keyboard layout"; press Enter
	wait "Primary network interface" for 2m
	if ($vm_nic_count EQUAL "4") {
		press Down
	}
	press Enter;
	wait "Hostname:" for 55s
	press Backspace*6; type "testo"; press Enter
	wait "Full name for the new user"; type "testo-user"; press Enter
	wait "Username for your account"; press Enter
	wait "Choose a password for the new user"; type "1111"; press Enter
	wait "Re-enter password to verify"; type "1111"; press Enter
	wait "Use weak password?"; press Left; press Enter
	wait "Encrypt your"; press Enter
	if ($HTTP_PROXY) {
		wait "Select your time zone" for 1m; press Enter
	} else {
		wait "Europe" for 2m; press Enter
	}
	wait "Partitioning method"; press Enter
	wait "Select disk to partition"; press Enter
	wait "configure LVM?"; press Left, Enter
	wait "Amount of volume group to use for guided partitioning"; press Enter
	wait "If you continue, the changes listed below"; press Left, Enter
	wait "HTTP proxy information" for 5m; press Enter
	wait "How do you want to manage upgrades" for 5m; press Enter
	wait "At the moment, only the core of the system is installed"; press Enter
	wait "Install the GRUB" for 5m; press Enter
	wait "Installation complete" for 30s; press Enter
	wait for 30s;
	type "testo-user"; press Enter
	wait for 3s; type "1111"; press Enter
	wait for 3s;
}

snapshot internet_configured: ubuntu_installed {
	type "sudo su"; press Enter
	type "1111"; press Enter
	wait for 3s
	if ($HTTP_PROXY) {
		type "nano /etc/apt/apt.conf.d/proxy.conf"; press Enter
		wait for 5s
		type "Acquire::http::Proxy \"http://" + $HTTP_PROXY + ":3128\";"; press Enter
		type "Acquire::https::Proxy \"http://" + $HTTP_PROXY + ":3128\";"
		press leftctrl+x; wait for 1s;
		press leftshift+y; press Enter
	}
	type "apt-get update"; press Enter
	wait for 1m
}

snapshot additions_installed: internet_configured {
	type "apt-get install -y virtualbox-guest-dkms"; press Enter
	wait for 2m
	type "reboot"; press Enter
	wait for 35s
	type "testo-user"; press Enter
	wait for 2s; type "1111"; press Enter
}

snapshot ready: additions_installed {
	type "sudo su"; press Enter
	wait for 1s
	type "1111"; press Enter
	wait for 1s;
	type "passwd root"; press Enter
	wait for 1s
	type "1111"; press Enter
	wait for 1s
	type "1111"; press Enter
	wait for 1s;
	type "passwd -u root"; press Enter
	wait for 2s;
	if ($vm_name STREQUAL "master") {
		type "apt-get install -y python conntrack conntrackd isc-dhcp-server arping nftables"; press Enter
		wait for 1m
	}
	stop
	unplug nic nat
	start
	wait for 30s
}

snapshot ifaces_renamed: ready {
	copyto $TESTO_DIR + "/samples/scripts/rename_net.sh" "/tmp/"
	exec bash "chmod +x /tmp/rename_net.sh"

	if ($vm_name STREQUAL "client") {
		exec bash "/tmp/rename_net.sh 52:54:00:00:00:aa master_side"
	} else if ($vm_name STREQUAL "client2") {
		exec bash "/tmp/rename_net.sh 52:54:00:11:00:aa master_side"
	} else if ($vm_name STREQUAL "server") {
		exec bash "/tmp/rename_net.sh 52:54:00:22:00:aa master_side"
	} else if ($vm_name STREQUAL "master") {
		exec bash "/tmp/rename_net.sh 52:54:00:33:00:aa client_side"
		exec bash "/tmp/rename_net.sh 52:54:00:33:00:bb server_side"
		exec bash "/tmp/rename_net.sh 52:54:00:33:00:cc slave_side"

		exec bash "sysctl -w net.ipv4.ip_forward=1"
	} else if ($vm_name STREQUAL "slave") {
		exec bash "/tmp/rename_net.sh 52:54:00:44:00:aa client_side"
		exec bash "/tmp/rename_net.sh 52:54:00:44:00:bb server_side"
		exec bash "/tmp/rename_net.sh 52:54:00:44:00:cc master_side"
	}
}
