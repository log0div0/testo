#Пример конфигурации динамических протоколов. Более подробно смотрите в документации https://bird.network.cz/
router id 10.0.0.102;#---Назначьте id узла в формате ipv4-адреса, раскоментируйте строку, нпр, "router id 1.1.1.1"---
protocol device { #Фиктивный протокол, позволяющий передавать локальные маршруты в таблицу bird.
   scan time 1;
}
protocol direct { #Фиктивный протокол, позволяющий передавать локальные маршруты в таблицу bird.
   ipv4 {
      import all;
   };
}
protocol static{
	ipv4{import all;}; #Фиктивный протокол, позволяющий передавать статические маршруты в таблицу bird.


route 10.0.0.101/32 via 172.33.0.9;
route 10.0.0.3/32 via 172.33.0.9;

}
filter export_kernel
{
	#Обязательный фильтр, запрещающий дублировать статические и локальные маршруты из bird в kernel.
	if source ~ [RTS_STATIC, RTS_DEVICE] then reject;
    accept;
}
protocol kernel{
	metric 0;	#Параметр, позволяющий задать соответствующую метрику протоколам маршрутизации и передать маршруты с метрикой из bird в kernel
	ipv4 {
		import none; #Запрет передачи маршрутов из kernel в master.
		export filter export_kernel; #Обязательный фильтр передачи локальных и статических маршрутов из master в kernel.
	};
	
}

#секции ibgp
protocol bgp ibgp1{ #задайте имя протокола в поле NAME, нпр, ibgp1.
	router id 10.0.0.102; # укажите отдельный router id при необходимости
	ipv4 {
		next hop self;
		#Выберите один из вариантов export, раскомментируйте нужную строну.
		export filter { if ( source ~ [RTS_DEVICE, RTS_OSPF, RTS_OSPF_IA, RTS_OSPF_EXT1, RTS_OSPF_EXT2] && net!=10.0.0.102/32 ) then { accept; } reject;}; #С редистрибуцией локальных и OSPF маршрутов.
		import filter { krt_metric = 200; accept;};  #Обязательный фильтр, задающий маршрутам полученным из ebgp метрику 20.
	};
	local 10.0.0.102 as 65001; #Укажите автономную систему узла, нпр, "local as 65004".
	neighbor 10.0.0.101 as 65001; #Укажите ip-адрес и AS ibgp соседа, нпр, "neighbor 10.0.1.2 as 65004".
	multihop 5;
	hold time 6;
}
#секции ibgp
protocol bgp ibgp2{ #задайте имя протокола в поле NAME, нпр, ibgp1.
	router id 10.0.0.202; # укажите отдельный router id при необходимости
	ipv4 {
		next hop self;
		#Выберите один из вариантов export, раскомментируйте нужную строну.
		export filter { if ( source ~ [RTS_DEVICE, RTS_OSPF, RTS_OSPF_IA, RTS_OSPF_EXT1, RTS_OSPF_EXT2] && net!=10.0.0.202/32 ) then { accept; } reject;}; #С редистрибуцией локальных и OSPF маршрутов.
		import filter { krt_metric = 200; accept;};  #Обязательный фильтр, задающий маршрутам полученным из ebgp метрику 20.
	};
	local 10.0.0.202 as 65001; #Укажите автономную систему узла, нпр, "local as 65004".
 	neighbor 10.0.0.3 as 65001;#Укажите ip-адрес и AS ibgp соседа, нпр, "neighbor 10.0.1.2 as 65004".
	multihop 5;
	hold time 6;
}